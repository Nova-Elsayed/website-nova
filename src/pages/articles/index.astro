---
import Base from "@/layouts/Base.astro";
import { contentfulClient } from "@/lib/contentful";
import type { Page, Article } from "@/lib/contentful";
import ArticleCard from "@/components/ArticleCard.astro";
import RichTextContainer from "@/components/RichTextContainer.astro";

export const prerender = true;

const pageData = await contentfulClient.getEntry<Page>(
  "5yi8iu0vA6h6axYuSJoXHg",
);
const page = pageData.fields;

const articlesEntries = await contentfulClient.getEntries<Article>({
  content_type: "article",
});
const articles = articlesEntries.items
  .map((item) => {
    const newItem = item.fields; // newItem
    newItem.publishedAt = item.sys.updatedAt;

    return newItem;
  })
  .sort((a, b) => {
    // Turn your strings into dates, and then subtract them
    // to get a value that is either negative, positive, or zero.
    return Date.parse(b.publishedAt) - Date.parse(a.publishedAt);
  });
---

<Base title={page.title} meta_title={page.title}>
  <header class="w-screen py-16 mt-12 text-center">
    <p
      set:html="— Artikel —"
      class="mb-8 tracking-wide text-md font-secondary"
    />
    <h1 set:html={page.title} class="mb-8 text-2xl" />
    {
      page.description && (
        <blockquote
          class="mx-auto mb-8 text-lg italic leading-relaxed tracking-wide md:w-2/3"
          set:html={page.description}
        />
      )
    }
  </header>
  <section class="w-screen mb-16">
    <RichTextContainer class="" content={page.content} />
  </section>

  <section class="w-screen mb-16">
    <ul class="my-8 article-list">
      {articles.map((article) => <ArticleCard data={article} />)}
    </ul>
  </section>
</Base>
