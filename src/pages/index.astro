---
import ImageMod from "@/components/ImageMod.astro";
import Base from "@/layouts/Base.astro";
import { markdownify } from "@/lib/utils/textConverter";
import CallToAction from "@/partials/CallToAction.astro";
import Testimonial from "@/partials/Testimonial.astro";
import type { Button, Feature, Feature_2, Workshop } from "@/types";
import { getEntry } from "astro:content";
import { FaCheck } from "react-icons/fa";

interface Homepage {
  banner: {
    title: string;
    subtitle: string;
    content: string;
    image: string;
    cta_about: Button;
    cta_contact: Button;
  };
  opener: {
    quote: string;
    title: string;
    image: string;
    content: string;
  };
  services: {
    title: string;
    service_1: {
      title: string;
      caption: string;
      workshops: Workshop[];
    };
    service_2: {
      title: string;
      caption: string;
      features: Feature_2[];
      cta: Button;
    };
  };
  features: Feature[];
}

const homepage = await getEntry("homepage", "-index");
const testimonial = await getEntry("sections", "testimonial");
const call_to_action = await getEntry("sections", "call-to-action");
const { banner, opener, features, services }: Homepage = homepage.data;
---

<Base>
  <!-- Banner -->
  <section class="section pt-14 bg-teal-800">
    <div class="container">
      <div class="row items-center">
        <div class="md:col-6 text-left">
          <h1
            set:html={markdownify(banner.title)}
            class="mb-4 text-8xl text-teal-400"
          />
          <h2
            set:html={markdownify(banner.subtitle)}
            class="text-6xl mb-10 text-teal-400"
          />
          <p
            set:html={markdownify(banner.content)}
            class="mb-8 text-4xl text-teal-100"
          />

          {
            banner.cta_about.enable && (
              <a
                class="btn btn-primary me-4"
                href={banner.cta_about.link}
                target={
                  banner.cta_about.link.startsWith("http") ? "_blank" : "_self"
                }
                rel="noopener"
              >
                {banner.cta_about.label}
              </a>
            )
          }
          {
            banner.cta_contact.enable && (
              <a
                class="btn btn-primary"
                href={banner.cta_contact.link}
                target={
                  banner.cta_contact.link.startsWith("http")
                    ? "_blank"
                    : "_self"
                }
                rel="noopener"
              >
                {banner.cta_contact.label}
              </a>
            )
          }
        </div>
        {
          banner.image && (
            <div class="md:col-6 flex justify-center">
              <ImageMod
                src={banner.image}
                alt="banner"
                width={480}
                height={480}
                class="rounded-full"
                format="webp"
              />
            </div>
          )
        }
      </div>
    </div>
  </section>
  <!-- /Banner -->
  <!-- Opener -->
  <section class="pb-0 bg-red-900">
    <div class="section-header mb-8 relative overflow-hidden">
      {
        opener.image && (
          <div class="overflow-hidden relative w-full h-60 max-h-60">
            <ImageMod
              src={opener.image}
              alt="opener"
              width={1920}
              height={1080}
              class="absolute bottom-0 left-0"
              format="webp"
            />
          </div>
        )
      }
      <div
        class="text-left px-24 py-16 bg-red-900 opacity-85 absolute top-0 left-0 right-0"
      >
        <h1
          set:html={markdownify(opener.quote)}
          class="mb-4 text-6xl text-red-500"
        />
        <h2
          set:html={markdownify(opener.title)}
          class="text-4xl mb-10 text-red-500"
        />
      </div>
    </div>
    <div class="container">
      <div class="row items-center justify-center">
        <content
          set:html={markdownify(opener.content)}
          class="mb-8 text-left text-red-100 content text-base"
        />
      </div>
    </div>
  </section>
  <!-- /Opener -->
  <!-- Services -->
  <section class="section pb-08">
    <div class="container">
      <div class="row items-center justify-center">
        <div class="text-center">
          <h1
            set:html={markdownify(services.title)}
            class="mb-4 text-h3 lg:text-h1"
          />
        </div>
      </div>
      <div>
        {
          services.service_1 && (
            <div class="row items-center justify-center">
              <div class="text-center">
                <h1
                  set:html={markdownify(services.service_1.title)}
                  class="mb-4 text-h3 lg:text-h1"
                />
                <p
                  set:html={markdownify(services.service_1.caption)}
                  class="mb-8 text-lg"
                />
              </div>
              <ul class="flex justify-between">
                {services.service_1.workshops.map((workshop: Workshop) => (
                  <li class="mb-8">
                    <h3 set:html={markdownify(workshop.title)} />
                  </li>
                ))}
              </ul>
            </div>
          )
        }
        {
          services.service_2 && (
            <div class="row items-center justify-center">
              <div class="text-center">
                <h1
                  set:html={markdownify(services.service_2.title)}
                  class="mb-4 text-h3 lg:text-h1"
                />
                <p
                  set:html={markdownify(services.service_2.caption)}
                  class="mb-8 text-lg"
                />
              </div>
              <ul class="flex justify-between">
                {services.service_2.features.map((feature: Feature_2) => (
                  <li class="mb-8">
                    <h3 set:html={markdownify(feature.title)} />
                  </li>
                ))}
              </ul>
              <div class="text-center">
                {services.service_2.cta.enable && (
                  <a
                    class="btn btn-primary"
                    href={services.service_2.cta.link}
                    target={
                      services.service_2.cta.link.startsWith("http")
                        ? "_blank"
                        : "_self"
                    }
                    rel="noopener"
                  >
                    {services.service_2.cta.label}
                  </a>
                )}
              </div>
            </div>
          )
        }
      </div>
    </div>
  </section>
  <!-- /Services -->
</Base>
